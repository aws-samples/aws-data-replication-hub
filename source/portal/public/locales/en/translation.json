{
  "title": "Data Transfer Hub",
  "yes": "Yes",
  "no": "No",
  "signOut": "Sign Out",
  "reLogin": "Login Again",
  "reLoignTips": "This session has expired. To log in to Data Transfer Hub again, please click Login Again.",
  "info": "Info",
  "optional": "optional",
  "recommened": "Recommened",
  "top": {
    "account": "Account"
  },
  "leftBar": {
    "title": "Data Transfer Hub",
    "taskList": "Tasks"
  },
  "breadCrumb": {
    "home": "Data Transfer Hub",
    "create": "Create Task",
    "list": "List",
    "tasks": "Tasks"
  },
  "step": {
    "oneTitle": "Step1",
    "oneDesc": "Select engine type",
    "twoTitle": "Step2",
    "twoDesc": "Specify task details",
    "threeTitle": "Step3",
    "threeDesc": "Review and create"
  },
  "home": {
    "title": {
      "createTitle": "Create Replication Task",
      "quickStart": "Quick Start",
      "moreResouce": "More Resources",
      "destinationType": "Destination Type"
    }
  },
  "creation": {
    "s3plugin": {
      "name": "Amazon S3 Transfer Engine",
      "desc": "Transfer objects from different sources into Amazon S3.",
      "feat1": "Transfer S3 objects between AWS standard regions and AWS China regions",
      "feat2": "Transfer objects from Aliyun OSS / Tencent COS / Qiniu Kodo",
      "feat3": "Large file support",
      "feat4": "Support S3 Event trigger",
      "feat5": "Support replication with object metadata",
      "feat6": "Support incremental data transfer",
      "feat7": "Auto retry and error handling",
      "edition": "Edition"
    },
    "ecrPlugin": {
      "name": "Amazon ECR Transfer Engine",
      "desc": "Amazon ECR engine is used for replicating Docker images from different Docker Registry.",
      "feat1": "Replication between AWS standard partition and AWS CN paritition",
      "feat2": "Replication from Docker Hub, GCR.io, Quay.io",
      "feat3": "Parallel replication",
      "feat4": "Support public Docker images",
      "feat5": "Support Selective Docker images",
      "feat6": "Serverless architect, no minimum cost"
    },
    "sourceType": {
      "amazonS3Name": "Amazon S3",
      "aliyunOSSName": "Aliyun OSS",
      "qiniuKodoName": "Qiniu Kodo",
      "tencentCOSName": "Tencent COS",
      "googleGCSName": "Google GCS"
    },
    "tips": {
      "requiredCredential": "Please select a parameter store",
      "store1": "Select the",
      "store2": "Parameter Store",
      "store3": "which stores the credentials. Leave it blank for open bucket."
    },
    "step1": {
      "engineType": "Select engine type",
      "engineOptions": "Engine options"
    },
    "step2": {
      "taskDetail": "Specify task details",
      "sourceType": "Source Type",
      "selectSourceType": "Select the source type among various providers.",
      "settings": {
        "source": {
          "title": "Source settings",
          "bucketName": "Bucket Name",
          "bucketDesc": "Input the bucket name.",
          "srcInAccount": "Is Bucket in this account?",
          "srcInAccountDesc": "Select Yes, if the bucket is in the same AWS account as Data Transfer Hub.",
          "srcRegionName": "Region Name",
          "srcRegionNameDesc": "You can enter region name or region code.",
          "enableS3Event": "Enable S3 Event?",
          "enableS3EventDesc": "Whether to enable S3 Event to trigger the transfer.",
          "objectPrefix": "Bucket Object Prefix",
          "prefixDesc": "It will only replicate objects with the provided prefix.",
          "includeMetadata": "Include Object Metadata?",
          "includeMetadataDesc1": "Copy of",
          "includeMetadataDesc2": "Object Metadata.",
          "includeMetadataDesc3": "This will have additional API cost."
        },
        "dest": {
          "title": "Destination settings",
          "bucketName": "Bucket Name",
          "bucketDesc": "Input the bucket name.",
          "destInAccount": "Is Bucket in this account?",
          "destInAccountDesc": "Select Yes, if the bucket is in the same AWS account as Data Transfer Hub.",
          "objectPrefix": "Bucket Object Prefix",
          "prefixDesc": "Add Prefix to all the transferred objects.",
          "storageClass": "Storage Class",
          "storageClassDesc": "Objects will be stored with the selected storage class.",
          "destRegionName": "Region Name",
          "destRegionNameDesc": "You can enter region name or region code."
        },
        "credential": {
          "title": "Credentials",
          "whitch": "Which bucket in current AWS account?",
          "whitchDesc": "Select Source if your source bucket is in the same account as Data Transfer Hub. Otherwise, select Destination.",
          "store": "Parameter Store name for Credentials",
          "storeDesc": "Choose the SSM Parameter Store which holds the credentials."
        },
        "advance": {
          "title": "Engine settings",
          "professionTitle": "Advanced Options",
          "lambdaMemory": "Lambda Memory",
          "LambdaMemoryDesc": "Set the default Lambda memory, default is 256 MB.",
          "multipartThreshold": "Multipart Threshold",
          "multipartThresholdDesc": "Threshold size for multipart upload in MB, default is 10 MB.",
          "chunkSize": "Chunk Size",
          "chunkSizeDesc": "Chunk size for multipart upload in MB, default is 5 MB.",
          "maxThreads": "Max Threads",
          "maxThreadsDesc": "Max threads to run multipart upload in Lambda, default is 10.",
          "maximumCapacity": "Maximum Capacity",
          "maximumCapacityDesc": "Maximum number of Graviton2 instances.",
          "minimumCapacity": "Minimum Capacity",
          "minimumCapacityDesc": "Minimum number of Graviton2 instances.",
          "desiredCapacity": "Desired Capacity",
          "desiredCapacityDesc": "Desired number of Graviton2 instances.",
          "finderDepth": "Finder Depth",
          "finderDepthDesc": "The depth of sub folders to compare in parallel. 0 means comparing all objects in sequence.",
          "finderNumber": "Finder Number",
          "finderNumberDesc": "The number of find threads to run in parrallel.",
          "workerThreadsNumber": "Worker Threads Number",
          "workerThreadsNumberDesc": "The number of worker threads to run in one insance."
        },
        "more": {
          "title": "More",
          "description": "Description",
          "descriptionDesc": "Input the description of the task.",
          "email": "Alarm Email",
          "emailDesc": "Notification will be sent to this email if any errors."
        }
      }
    },
    "step2ECR": {
      "taskDetail": "Specify task details",
      "sourceType": "Source Type",
      "selectContainerType": "Select container registry type",
      "settings": {
        "source": {
          "title": "Source settings",
          "sourceRegion": "Source Region",
          "sourceRegionDesc": "You can enter region name or region code.",
          "sourceInAccount": "Is source in this account?",
          "sourceInAccountDesc": "Select YES, if the Amazon ECR is in current account.",
          "accountId": "AWS Account ID",
          "accountIdTips": "Enter the AWS Account ID (12 digits).",
          "accountIdPlaceholder": "12 digits Account ID",
          "credentialsStore": "Credentials Store ",
          "tips": "Please select a parameter store",
          "dockerImages": "Docker Images",
          "dockerImagesDesc": "Select the docker images to replicate.",
          "imageList": "Image List",
          "image1": "Enter all images in format of",
          "image2": "image-name",
          "image3": "tag",
          "image4": "delimited by comma. If tag is ommited, the latest tag will be used."
        },
        "dest": {
          "title": "Destination settings",
          "destinationRegion": "Destination Region",
          "destinationRegionDesc": "You can enter region name or region code.",
          "regionRequired": "Destination region required",
          "destInAccount": "Is destination in this account?",
          "destInAccountDesc": "Select YES, if the Amazon ECR is in current account.",
          "credentialsStore": "Credentials Store ",
          "tips": "Please select a parameter store",
          "prefix": "Prefix",
          "optional": "optional",
          "prefixDesc": "Add the prefix to all images. Default is none."
        },
        "more": {
          "title": "More",
          "description": "Description",
          "descriptionDesc": "Description about this task",
          "email": "Alarm Notification",
          "optional": "optional",
          "emailDesc": "Receive notificaiton when replication failed."
        }
      }
    },
    "step3": {
      "reviewTitle": "Review task",
      "step1Title": "Step 1: Select engine type",
      "step1Engine": "Engine",
      "step1EngineSubEngine": "Engine",
      "step1EngineSubEngineDesc": "Amazon S3 Replication Engine V1.3",
      "step1EngineSubEngineECRDesc": "Amazon ECR Replication Engine v1.0",
      "step1Type": "type",
      "step1TypeDesc": "Serverless Edition. Serverless edition is ideal for real-time transfer, and you pay as you go.",
      "step2Detail": "Step 2: Specify task details",
      "step2TaskParams": "Task Parameters",
      "step2Params": "Parameter",
      "step2Value": "Value",
      "credential": "Credentials",
      "credentialDesc": "Please create a parameter in Parameter Store from AWS Systems Manager, you can use default name drh-credentials (optional), select SecureString as its type, and put a Value following below format.",
      "credentialCopied": "Copied"
    }
  },
  "taskList": {
    "title": "Tasks",
    "stopTask": "Stop Task",
    "tips": {
      "selectTask": "Please select a task",
      "selectTaskStop": "Please select a task to stop",
      "confimStop": "Are you sure you want to stop the Task",
      "successMsg": "Task created successfully"
    },
    "table": {
      "taskId": "Task ID",
      "source": "Source",
      "destination": "Destination",
      "engineType": "Engine Type",
      "status": "Status",
      "createdTime": "Created time"
    }
  },
  "taskDetail": {
    "title": "",
    "stopTask": "Stop Task",
    "stopTaskTips": "Are you sure you want to stop this Task?",
    "generalConfig": "General configuration",
    "engine": "Engine",
    "plugin": "S3 Replication Plugin v1.3",
    "pluginECR": "Amazon ECR Plugin v1.0",
    "sourceType": "Source Type",
    "repStatus": "Replication Status",
    "details": "Details",
    "taskId": "Task ID",
    "createdAt": "Created At",
    "status": "Status",
    "inProgress": "Replicating in progress",
    "totalObjects": "Total Objects",
    "repObjects": "Replicated Objects",
    "srcName": "Source Bucket Name",
    "srcPrefix": "Source Bucket Prefix",
    "srcInThisAccount": "Bucket in This Account?",
    "destName": "Destination Bucket Name",
    "destPrefix": "Destination Bucket Prefix",
    "destInThisAccount": "Bucket in This Account?",
    "credentials": "Paramete Store for credentials",
    "images": "Images",
    "option": "Options",
    "description": "Description",
    "alarmEmail": "Alarm Email",
    "alarmEmailECR": "Alarm Notification",
    "sourceRegion": "Source Region",
    "sourceInAccount": "Is Source in current account?",
    "srcAccountId": "Source Account Id",
    "srcCredential": "Source Credential",
    "destRegion": "Destination Region",
    "destInAccount": "Is Destination in current account?",
    "accountId": "AWS Account ID",
    "credentialStore": "Credential Store",
    "prefix": "Prefix",
    "taskMetrics": "Task Metrics",
    "dashboard": "CloudWatch Dashboard",
    "enableS3Event": "Enable S3 Event?",
    "storageClass": "Storage Class",
    "copyMetadata": "Copy Metadata?",
    "engineSettings": "Engine Settings",
    "lambdaMemory": "Lambda Memory",
    "multipartUploadThreshold": "Multipart Upload Threshold",
    "chunkSize": "Chunk Size",
    "maxThreads": "Max Threads",
    "maximumInstances": "Maximum Instances",
    "minimumInstances": "Minimum Instances",
    "desiredInstances": "Desired Instances",
    "advancedSettings": "Advanced Settings",
    "finderDepth": "Finder Depth",
    "finderNumber": "Finder Number",
    "workerThreadsNumber": "Worker Threads Number"
  },
  "bottom": {
    "copy": "© 2008 - 2021, Amazon Web Services, Inc. or its affiliates. All rights reserved.",
    "feedback": "Feedback",
    "privacy": "Privacy Policy",
    "use": "Terms of Use"
  },
  "btn": {
    "next": "Next Step",
    "prev": "Previous",
    "cancel": "Cancel",
    "confirm": "Confirm",
    "copy": "Copy",
    "stop": "Stop",
    "createTask": "Create Task",
    "viewDetail": "View Details",
    "taskAction": "Task Action",
    "stopTask": "Stop Task",
    "cloneTask": "Clone Task",
    "reLogin": "Login Again"
  },
  "tips": {
    "error": {
      "sourceBucketRequired": "Source Bucket Name is Required",
      "destBucketRequired": "Destination Bucket Name is Required",
      "emailRequired": "Alarm Email is required",
      "emailValidate": "Alarm Email must be validate",
      "credentialRequired": "Parameter Store Credential is Required"
    }
  },
  "comps": {
    "credential": {
      "name": "Credentials Store",
      "create": "Create a",
      "store": "Parameter Store",
      "save1": "to save your credentials. Select ",
      "save2": "SecureString",
      "save3": " as the type.",
      "format": "Format",
      "formatDesc": "Copy the following credential, and replace with your own value.",
      "learnMore": "Learn more ",
      "createStore": "Create a Credential Store"
    },
    "engineSettings": {
      "name": "Engine settings",
      "tip1": "This is the advanced settings to tune the performance of the application.",
      "tip2": "Recommend to adjust this settings only under the guidance of AWS Solutions Architect."
    },
    "engineEdition": {
      "name": "Engine Edition",
      "learnMore": "Learn more ",
      "tip1": "Choose the right data transfer engine for the task.",
      "tip2": "Use the Graviton2 instances to read and write to the buckets.",
      "tip3": "is enabled in this edition which can provide better network performance. Especially recommend for data transfer between China regions and standard regions.",
      "tip4": "AWS Lambda has its advantage in concurrency. Every AWS Account can have 1000 maximum concurrency by default.",
      "learnMoreTitle": "How to enable TCP BBR to improve network speed on Linux?"
    }
  }
}